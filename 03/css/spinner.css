/* spinner */
.spinner-container {
  display: flex;
  justify-content: center;
}
/* .spinner {
  width: 25px;
  height: 25px;
  position: relative;
} */
.spinner::after {
  content: '';
  box-sizing: border-box;
  width: 25px;
  height: 25px;
  /* left: 0;
  top: 0;
  position: absolute; */
  display: inline-block;
  border-radius: 50%;
  border: 4px solid rgba(0, 191, 215, 1);
  border-right-color: rgba(0, 191, 215, 0);
  animation: spinner 0.6s linear infinite;
}
/*
  ::after : 선택한 element 뒤에 가상 콘텐츠 삽입
  width, height를 25px로 해줌으로써 spinner의 width와 height와 맞춰줌
  rgb 옵션 마지막은 투명도 속성 => 0이면 투명함
*/

/*
static : 기준 없음(배치 불가능 / 기본값)
relative : 요소 자기 자신을 기준으로 배치
absolute : 부모 요소를 기준으로 배치
fixed : 뷰포트 기준으로 배치
stickey : 스크롤 영역 기준으로 배치

✨Relative
- 요소 자기 자신의 원래 위치(static일 때의 위치)를 기준으로 배치
- 원래 위치를 기준으로 위쪽, 아래쪽, 왼쪽, 오른쪽에서 얼마만큼 떨어질 지 결정
- 위치를 이동하면서 다른 요소에 영향을 주지 않는다
- 문서 상 원래 위치가 그대로 유지된다

✨Absolute
- 요소를 일반적인 문서 흐름에서 제거한다
- 가장 가까운 위치에 있는 조상 요소를 기준으로 배치한다
- 조상 요소 위치를 기준으로 위쪽, 아래쪽, 왼쪽, 오른쪽에서 얼마만큼 떨어질 지 결정한다
- 조상 중 Position을 가진 요소가 없다면 초기 컨테이닝 블록(<body>요소)를 기준으로 삼는다.(static을 제외한 값)
- 문서 상 원래 위치를 잃어버린다

https://creamilk88.tistory.com/197

::before, ::after : 디폴트로 display:inline;
따라서 display : inline-block으로 바꿔주면 해결!

box-sizing : 요소의 너비와 높이를 계산하는 방법을 지정
- content-box : 기본 css 박스 크기 결정법을 사용. 요소의 너비를 100 픽셀로 설정하면 콘텐츠 영역이 100 픽셀 너비를 가지고, 테두리와 안쪽 여백은 이에 더해진다
- border-box : 테두리와 안쪽 여백의 크기도 요소의 크기로 고려한다. 너비를 100 픽셀로 설정하고 테두리와 안쪽 여백을 추가하면, 콘텐츠 영역이 줄어들어 총 너비 100 픽셀을 유지한다. 대부분의 경우 이 편이 크기를 조절할 때 쉽다

annimation 첫번째 프로퍼티는 애니메이션 이름 @keyframes에 지정된 이름
*/

@keyframes spinner {
  to {
    transform: rotate(360deg);
  }
}
/*
@keyframes : 애니메이션을 재생할 각 프레임의 스타일을 정의하는 것

https://webclub.tistory.com/621
*/
