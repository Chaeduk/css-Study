html,
body {
  margin: 0;
  padding: 0;
  font-family: sans-serif;
}
/*
  Serif : 바탕체 계열
  Sans-Serif : 고딕체 계열
*/

#app {
  height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
}

.calculator {
  width: 300px;
  display: grid;
  grid-template-areas:
    'total total total total'
    'modif modif modif oper'
    'digit digit digit oper'
    'digit digit digit oper'
    'digit digit digit oper'
    'digit digit digit oper';
  grid-auto-columns: 1fr;
  grid-auto-rows: 1fr;
  height: 500px;
}
/*
  calculator 클래스는 그리드 컨테이너
  display: grid
  grid-template-areas : 각 영역에 이름을 붙이고, 그 이름을 이용해서 배치하는 방법
  grid-auto-columns(rows) : row나 column의 개수를 미리 알 수 없는 경우 사용
  
*/

button {
  font-size: 2rem;
  border: 0.5px solid #98999b;
}

.modifiers button {
  background-color: #ccc;
}

.operations button {
  background-color: orange;
}

.digits button {
  background-color: #efefef;
}

#total {
  grid-area: total;
  background-color: #333;
  color: white;
  margin: 0;
  padding: 1rem;
  display: flex;
  justify-content: flex-end;
  align-items: flex-end;
  font-size: 4rem;
}
/*
  grid-area : grid-template-areas의 item 이름
*/

.digits {
  grid-area: digit;
  display: flex;
  flex-wrap: wrap;
  flex-direction: row-reverse;
}
/*
  flex-wrap의 wrap 속성 : 가능한 영역 내에서 벗어나지 않고 여러 행으로 나누어 표현
  flex-direction의 row-reverse 속성 : 오른쪽에서 왼쪽으로 진행
*/

.digits button {
  flex: 1 0 30%;
}
/*
  선택자 사이에 공백이 제거되는 경우 여러 선택자를 동시에 만족하는 태그에 스타일 적용 가능(AND)
  flex : flex-grow | flex-shrink | flex-basis
  flex-grow : 요소 내부에서 할당 가능한 공간의 정도를 선언
  flex-shrink : 줄어드는 정도 지정(값이 0이면 줄어들지 않음)
  flex-basis : 플레스 아이템의 초기 크기를 지정한다

  order : 플렉스 또는 그리드 컨테이너 안에서 현재 요소의 배치 순서를 지정한다
*/

.modifiers {
  grid-area: modif;
  /* grid-auto-flow: column;
  grid-auto-columns: 1fr; */
}
/*
  grid-auto-flow: 아이템이 자동 배치되는 흐름을 결정하는 속성
*/

.operations {
  grid-area: oper;
}

.subgrid {
  display: grid;
}
